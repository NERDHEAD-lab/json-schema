name: pull-request-policies.yml

on:
  pull_request:
    types: [opened]

jobs:
  set-title:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Set PR title from branch name (only for user authors & single commit)
        uses: actions/github-script@v7
        with:
          script: |
            // PR의 제목이 commit 메시지와 동일한 경우, release-please가 오탐지 않도록 PR 제목을 브랜치 이름으로 설정합니다.
            const pr = context.payload.pull_request;

            if (pr.user.type !== 'User') {
              console.log(`Skipping: PR author is not a user (${pr.user.login})`);
              return;
            }

            const { data: commits } = await github.rest.pulls.listCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              per_page: 2
            });

            if (commits.length > 1) {
              console.log(`Skipping: PR has ${commits.length} commits (expected 1)`);
              return;
            }
            
            // if not same title and commit message, skip
            const commitMessage = commits[0].commit.message.split('\n')[0].trim();
            if (pr.title !== commitMessage) {
                console.log(`Skipping: PR already has a different title than the commit message (${pr.title})`);
                return;
            }

            const branch = pr.head.ref;
            const formattedTitle = branch.charAt(0).toUpperCase() + branch.slice(1).replace(/-/g, ' ');

            await github.rest.pulls.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number,
              title: formattedTitle
            });

            console.log(`✅ PR title updated to: ${formattedTitle}`);

  auto-assign:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Auto-assign PR author or repo owner
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const issue_number = pr.number;

            let assignee;
            if (pr.user.type !== 'User') {
              console.log(`PR author is a bot (${pr.user.login}). Assigning repository owner: ${owner}`);
              assignee = owner;
            } else {
              console.log(`PR author is a user (${pr.user.login}). Assigning the author.`);
              assignee = pr.user.login;
            }

            await github.rest.issues.addAssignees({
              owner,
              repo,
              issue_number,
              assignees: [assignee]
            });

            console.log(`✅ Successfully assigned ${assignee} to the PR.`);